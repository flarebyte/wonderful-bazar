'use strict'
magma_constant = require('magma-constant')
should = require('should')

###
======== A Handy Little Mocha Reference ========
https://github.com/visionmedia/should.js
https://github.com/visionmedia/mocha
###


describe 'magma-constant', ()->
  
  describe '#REGEX_GATE_ID()', ()->
    it 'captures correct gate id ', ()->
      v=magma_constant.EX_GATE_ID
      magma_constant.REGEX_GATE_ID.test(v).should.be.true
    it 'rejects incorrect gate id ', ()->
      v= magma_constant.EX_GATE_ID+"000"
      magma_constant.REGEX_GATE_ID.test(v).should.be.false

  describe '#REGEX_UNIVERSE_ID()', ()->
    it 'captures correct universe id ', ()->
      v=magma_constant.EX_UNIVERSE_ID
      magma_constant.REGEX_UNIVERSE_ID.test(v).should.be.true
    it 'rejects incorrect gate id ', ()->
      v= magma_constant.EX_UNIVERSE_ID+";"
      magma_constant.REGEX_UNIVERSE_ID.test(v).should.be.false
  
  describe '#REGEX_VIEW_ID()', ()->
    it 'captures correct view id ', ()->
      v=magma_constant.EX_VIEW_ID
      magma_constant.REGEX_VIEW_ID.test(v).should.be.true
    it 'rejects incorrect view id ', ()->
      v= magma_constant.EX_VIEW_ID+"aa"
      magma_constant.REGEX_VIEW_ID.test(v).should.be.false
    
  describe '#REGEX_USER_ID()', ()->
    it 'captures correct user id ', ()->
      v=magma_constant.EX_USER_ID
      magma_constant.REGEX_USER_ID.test(v).should.be.true
    it 'rejects incorrect user id ', ()->
      v= magma_constant.EX_USER_ID+";"
      magma_constant.REGEX_USER_ID.test(v).should.be.false
 
  describe '#REGEX_MESSAGE_ID()', ()->
    it 'captures correct message id ', ()->
      v=magma_constant.EX_MESSAGE_ID
      magma_constant.REGEX_MESSAGE_ID.test(v).should.be.true
    it 'rejects incorrect message id ', ()->
      v= magma_constant.EX_MESSAGE_ID+";"
      magma_constant.REGEX_MESSAGE_ID.test(v).should.be.false
 
  describe '#REGEX_ROLE_ID()', ()->
    it 'captures correct role id ', ()->
      v=magma_constant.EX_ROLE_ID
      magma_constant.REGEX_ROLE_ID.test(v).should.be.true
    it 'rejects incorrect role id ', ()->
      v= magma_constant.EX_ROLE_ID+"<<"
      magma_constant.REGEX_ROLE_ID.test(v).should.be.false
  
  describe '#REGEX_TENANT_ID()', ()->
    it 'captures correct tenant id ', ()->
      v=magma_constant.EX_TENANT_ID
      magma_constant.REGEX_TENANT_ID.test(v).should.be.true
    it 'rejects incorrect tenant id ', ()->
      v= magma_constant.EX_TENANT_ID+"?"
      magma_constant.REGEX_TENANT_ID.test(v).should.be.false
    
  describe '#REGEX_PLUGIN_ID()', ()->
    it 'captures correct plugin id ', ()->
      v=magma_constant.EX_PLUGIN_ID
      magma_constant.REGEX_PLUGIN_ID.test(v).should.be.true
    it 'rejects incorrect plugin id ', ()->
      v= magma_constant.EX_PLUGIN_ID+"<<"
      magma_constant.REGEX_PLUGIN_ID.test(v).should.be.false

  describe '#REGEX_TASKTYPE_ID()', ()->
    it 'captures correct tasktype id ', ()->
      v=magma_constant.TASKTYPE_PARALLEL
      magma_constant.REGEX_TASKTYPE_ID.test(v).should.be.true
    it 'rejects incorrect tasktype id ', ()->
      v= magma_constant.TASKTYPE_PARALLEL+"<<"
      magma_constant.REGEX_TASKTYPE_ID.test(v).should.be.false
  
  describe '#REGEX_PREDICATE_ID()', ()->
    it 'captures correct predicate id ', ()->
      v=magma_constant.EX_PREDICATE_ID
      magma_constant.REGEX_PREDICATE_ID.test(v).should.be.true
    it 'rejects incorrect predicate id ', ()->
      v= magma_constant.EX_PREDICATE_ID+"<<"
      magma_constant.REGEX_PREDICATE_ID.test(v).should.be.false
  
  describe '#REGEX_AGREEMENT_ID()', ()->
    it 'captures correct agreement id ', ()->
      v=magma_constant.EX_AGREEMENT_ID
      magma_constant.REGEX_AGREEMENT_ID.test(v).should.be.true
    it 'rejects incorrect agreement id ', ()->
      v= magma_constant.EX_AGREEMENT_ID+"<<"
      magma_constant.REGEX_AGREEMENT_ID.test(v).should.be.false

  describe '#REGEX_VIEW_PROPS_ID()', ()->
    it 'captures correct view props id ', ()->
      v=magma_constant.EX_VIEW_PROPS_ID
      magma_constant.REGEX_VIEW_PROPS_ID.test(v).should.be.true
    it 'rejects incorrect view props id ', ()->
      v= magma_constant.EX_VIEW_PROPS_ID+"<<"
      magma_constant.REGEX_VIEW_PROPS_ID.test(v).should.be.false

  describe '#REGEX_VIEW_I18N_ID()', ()->
    it 'captures correct view i18n id ', ()->
      v=magma_constant.EX_VIEW_I18N_ID
      magma_constant.REGEX_VIEW_I18N_ID.test(v).should.be.true
    it 'rejects incorrect view i18n id ', ()->
      v= magma_constant.EX_VIEW_I18N_ID+"<<"
      magma_constant.REGEX_VIEW_I18N_ID.test(v).should.be.false

  describe '#REGEX_NAME()', ()->
    it 'captures correct name ', ()->
      v= "good name"
      magma_constant.REGEX_NAME.test(v).should.be.true
    it 'rejects incorrect name ', ()->
      v= "<<bad name"
      magma_constant.REGEX_NAME.test(v).should.be.false
    it 'rejects incorrect space in name ', ()->
      v= "big  space"
      magma_constant.REGEX_NAME.test(v).should.be.false

  describe '#REGEX_VERB_ID()', ()->
    it 'captures correct verb id ', ()->
      v=magma_constant.VERB_GET
      magma_constant.REGEX_VERB_ID.test(v).should.be.true
    it 'rejects incorrect verb id ', ()->
      v= magma_constant.VERT_PUT+"<<"
      magma_constant.REGEX_VERB_ID.test(v).should.be.false

  describe '#REGEX_ISO_DATE()', ()->
    it 'captures correct iso date', ()->
      v=magma_constant.EX_ISO_DATE
      magma_constant.REGEX_ISO_DATE.test(v).should.be.true
    it 'rejects incorrect iso date', ()->
      v= "01-02-2013"
      magma_constant.REGEX_ISO_DATE.test(v).should.be.false

  describe '#REGEX_ISO_DATETIME()', ()->
    it 'captures correct iso date time', ()->
      v=magma_constant.EX_ISO_DATETIME
      magma_constant.REGEX_ISO_DATETIME.test(v).should.be.true
    it 'rejects incorrect iso date time', ()->
      v= "01-02-2013"
      magma_constant.REGEX_ISO_DATE.test(v).should.be.false

  describe '#REGEX_DOMAIN_ID()', ()->
    it 'captures correct domain id ', ()->
      v= magma_constant.EX_DOMAIN_ID
      magma_constant.REGEX_DOMAIN_ID.test(v).should.be.true
    it 'rejects incorrect domain id ', ()->
      v= magma_constant.EX_DOMAIN_ID+"<<"
      magma_constant.REGEX_DOMAIN_ID.test(v).should.be.false

  describe '#REGEX_DOMAIN_NAME()', ()->
    it 'captures correct domain name ', ()->
      v= magma_constant.EX_DOMAIN_NAME
      magma_constant.REGEX_DOMAIN_NAME.test(v).should.be.true
    it 'rejects incorrect domain name', ()->
      v= magma_constant.EX_DOMAIN_NAME+"<<"
      magma_constant.REGEX_DOMAIN_NAME.test(v).should.be.false
  describe 'hashId()', ()->
    it 'generate hash for an id', ()->
      v= magma_constant.hashId("charles.baudelaire@gmail.com")
      v.should.be.eql(
        'ae663b54786aed38f8043055a9d022beb37b18d455d3908eb3d8f9aebf20f14d')

 