'use strict'
init = require("fb-custom-init")
magma_rendering = require('magma-rendering')
should = require('should')
CT = require('magma-constant')
_ = require('lodash')


###
======== A Handy Little Mocha Reference ========
https://github.com/visionmedia/should.js
https://github.com/visionmedia/mocha
###


describe 'magma-rendering', ()->
  describe '#checkRequisite()', ()->

    it 'should got next if everything is fine', (done)->
      req=
        get: (key)->
          switch key
            when "ownerRef"
              return CT.EX_OWNER_U1
            when "gateId"
              return CT.EX_GATE_ID
            else
              return null
        params:
          id: "785703264"
      res= {}
      magma_rendering.checkRequisite req,res, (next)->
        tx= req.tx
        tx.should.exist
        should.not.exist(req.errorUUID)
        done()

    it 'should fail if no ownerRef', (done)->
      sendValue= null
      req=
        get: (key)->
          switch key
            when "ownerRef"
              return null
            when "gateId"
              return CT.EX_GATE_ID
            else
              return null
        params:
          id: "785703264"
      res=
        send: (status,message)-> sendValue= status
      magma_rendering.checkRequisite req,res, (next)->
        should.exist(req.errorUUID)
        sendValue.should.eql 401
        done()

    it 'should fail if incorrect ownerRef', (done)->
      sendValue= null
      req=
        get: (key)->
          switch key
            when "ownerRef"
              return "silly: olivier@gmail.com"
            when "gateId"
              return CT.EX_GATE_ID
            else
              return null
        params:
          id: "390631980"
      res=
        send: (status,message)-> sendValue= status
      magma_rendering.checkRequisite req,res, (next)->
        should.exist(req.errorUUID)
        sendValue.should.eql 401
        done()

    it 'should fail if incorrect gateId', (done)->
      sendValue= null
      req=
        get: (key)->
          switch key
            when "ownerRef"
              return CT.EX_OWNER_U1
            when "gateId"
              return " "
            else
              return null
        params:
          id: "785703264"
      res=
        send: (status,message)-> sendValue= status
      magma_rendering.checkRequisite req,res, (next)->
        should.exist(req.errorUUID)
        sendValue.should.eql 412
        done()

    it 'should fail if incorrect viewId', (done)->
      sendValue= null
      req=
        get: (key)->
          switch key
            when "ownerRef"
              return CT.EX_OWNER_U1
            when "gateId"
              return CT.EX_GATE_ID
            else
              return null
        params:
          id: "999999999"
      res=
        send: (status,message)-> sendValue= status
      magma_rendering.checkRequisite req,res, (next)->
        should.exist(req.errorUUID)
        sendValue.should.eql 404
        done()

  describe '#methodToVerb()', ()->
    it 'should converts http method to constant', ()->
      meth= magma_rendering.methodToVerb('get')
      meth.should.eql CT.VERB_GET
