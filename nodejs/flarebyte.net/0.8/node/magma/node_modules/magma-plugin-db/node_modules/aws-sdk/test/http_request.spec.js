// Generated by CoffeeScript 1.7.1
(function() {
  var AWS;

  AWS = require('../lib/core');

  describe('AWS.HttpRequest', function() {
    var request;
    request = null;
    beforeEach(function() {
      return request = new AWS.HttpRequest('http://domain.com');
    });
    describe('constructor', function() {
      it('defaults to POST method requests', function() {
        return expect(request.method).toEqual('POST');
      });
      it('defaults the uri to /', function() {
        return expect(request.path).toEqual('/');
      });
      it('provides headers with a default user agent', function() {
        return expect(request.headers).toEqual({
          'User-Agent': AWS.util.userAgent()
        });
      });
      it('defaults body to empty string', function() {
        return expect(request.body).toEqual('');
      });
      it('defaults endpointPrefix to undefined', function() {
        return expect(request.endpointPrefix).toEqual(void 0);
      });
      return it('uses the path from the endpoint if provided', function() {
        request = new AWS.HttpRequest('http://domain.com/path');
        return expect(request.path).toEqual('/path');
      });
    });
    describe('pathname', function() {
      it('defaults to /', function() {
        return expect(request.pathname()).toEqual('/');
      });
      return it('returns the path portion of the uri', function() {
        request.path = '/abc/xyz?mno=hjk';
        return expect(request.pathname()).toEqual('/abc/xyz');
      });
    });
    return describe('search', function() {
      it('defaults to an empty string', function() {
        return expect(request.search()).toEqual('');
      });
      return it('returns the querystring portion of the uri', function() {
        request.path = '/abc/xyz?mno=hjk';
        return expect(request.search()).toEqual('mno=hjk');
      });
    });
  });

}).call(this);

//# sourceMappingURL=http_request.spec.map
