// Generated by CoffeeScript 1.7.1
(function() {
  var AWS, helpers;

  helpers = require('../helpers');

  AWS = helpers.AWS;

  require('../../lib/services/route53');

  describe('AWS.Route53', function() {
    var r53;
    r53 = null;
    beforeEach(function() {
      return r53 = new AWS.Route53();
    });
    describe('setEndpoint', function() {
      it('always enables SSL if no endpoint is set', function() {
        var service;
        service = new AWS.Route53({
          sslEnabled: false
        });
        return expect(service.endpoint.protocol).toEqual('https:');
      });
      return it('allows overriding SSL if custom endpoint is set', function() {
        var service;
        service = new AWS.Route53({
          endpoint: 'http://example.com'
        });
        return expect(service.endpoint.protocol).toEqual('http:');
      });
    });
    describe('building requests', function() {
      var service;
      service = new AWS.Route53;
      it('should fix hosted zone ID on input', function() {
        var req;
        req = service.getHostedZone({
          Id: '/hostedzone/ABCDEFG'
        });
        req.emit('build', [req]);
        return expect(req.httpRequest.path).toMatch('/hostedzone/ABCDEFG$');
      });
      return it('should fix health check ID on input', function() {
        var req;
        req = service.getHealthCheck({
          HealthCheckId: '/healthcheck/ABCDEFG'
        });
        req.emit('build', [req]);
        return expect(req.httpRequest.path).toMatch('/healthcheck/ABCDEFG$');
      });
    });
    return describe('changeResourceRecordSets', function() {
      return it('correctly builds the XML document', function() {
        var params, xml;
        xml = "<ChangeResourceRecordSetsRequest xmlns=\"https://route53.amazonaws.com/doc/2012-12-12/\">\n  <ChangeBatch>\n    <Comment>comment</Comment>\n    <Changes>\n      <Change>\n        <Action>CREATE</Action>\n        <ResourceRecordSet>\n          <Name>name</Name>\n          <Type>type</Type>\n          <ResourceRecords>\n            <ResourceRecord>\n              <Value>foo.com</Value>\n            </ResourceRecord>\n          </ResourceRecords>\n        </ResourceRecordSet>\n      </Change>\n    </Changes>\n  </ChangeBatch>\n</ChangeResourceRecordSetsRequest>";
        helpers.mockHttpResponse(200, {}, '');
        params = {
          HostedZoneId: 'zone-id',
          ChangeBatch: {
            Changes: [
              {
                ResourceRecordSet: {
                  Name: 'name',
                  Type: 'type',
                  ResourceRecords: [
                    {
                      Value: 'foo.com'
                    }
                  ]
                },
                Action: 'CREATE'
              }
            ],
            Comment: 'comment'
          }
        };
        return r53.changeResourceRecordSets(params, function(err, data) {
          return helpers.matchXML(this.request.httpRequest.body, xml);
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=route53.spec.map
